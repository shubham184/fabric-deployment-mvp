[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fabric-deployment-platform"
version = "0.1.0"
description = "A comprehensive platform for automating Microsoft Fabric deployments"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Fabric Deployment Team", email = "team@example.com"}
]
keywords = ["fabric", "deployment", "azure", "data-platform", "terraform"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
]

dependencies = [
    "PyYAML>=6.0",
    "Jinja2>=3.1.0",
    "jsonschema>=4.17.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "typer[all]>=0.9.0",
    "azure-identity>=1.12.0",
    "azure-mgmt-resource>=23.0.0",
    "azure-mgmt-datafactory>=8.0.0",
    "azure-mgmt-powerbidedicated>=1.0.0",
    "python-hcl2>=4.3.0",
    "structlog>=23.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "nbformat>=5.7.0",
    "jupyter>=1.0.0",
    "python-dotenv>=1.0.0",
    "pathlib2>=2.3.0",
    "requests>=2.31.0",
    "shellingham>=1.5.0",
    "colorama>=0.4.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
# Main CLI entry point
unison-insights-deploy = "scripts.fabric_cli:app"

# Legacy command support (optional - can be removed later)
fabric-deploy = "scripts.deploy:main"
fabric-validate = "scripts.validate:main"
fabric-render = "scripts.render_templates:main"
fabric-manage = "scripts.manage:main"

[tool.setuptools.packages.find]
where = ["src", "."]
include = ["scripts*", "src*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.ipynb"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]